{"version":3,"sources":["StopWatch.js","index.js"],"names":["StopWatch","useState","time","setTime","timeOn","setTimeOn","useEffect","interval","setInterval","preVal","clearInterval","className","Math","floor","slice","onClick","ReactDOM","render","document","getElementById"],"mappings":"2LAyCeA,MAtCf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,oBAAS,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KAeA,OAbAC,qBAAU,WACR,IAAIC,EAAW,KACf,OAAIH,GACFG,EAAWC,aAAY,WACrBL,GAAQ,SAACM,GAAD,OAAYA,EAAS,QAC5B,IAKE,kBAAMC,cAAcH,KAHlBG,cAAcH,KAItB,CAACH,IAGF,sBAAKO,UAAU,aAAf,UACE,gCACE,kCAAQ,IAAMC,KAAKC,MAAOX,EAAO,IAAS,KAAKY,OAAO,GAAtD,OACA,kCAAQ,IAAMF,KAAKC,MAAOX,EAAO,IAAQ,KAAKY,OAAO,GAArD,OACA,gCAAQ,IAAMF,KAAKC,MAAOX,EAAO,GAAM,MAAMY,OAAO,SAEpDV,GAAmB,IAATF,GACV,wBAAQa,QAAS,kBAAMV,GAAU,IAAjC,mBAEDD,GAAU,wBAAQW,QAAS,kBAAMV,GAAU,IAAjC,mBACTD,GAAmB,IAATF,GACV,wBAAQa,QAAS,kBAAMV,GAAU,IAAjC,qBAEAD,GAAmB,IAATF,GACV,wBAAQa,QAAS,kBAAMZ,EAAQ,IAA/B,uBC9BRa,IAASC,OAAO,cAAC,EAAD,IAAcC,SAASC,eAAe,U","file":"static/js/main.53451d22.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\nfunction StopWatch() {\n  const [time, setTime] = useState(0);\n  const [timeOn, setTimeOn] = useState(false);\n\n  useEffect(() => {\n    let interval = null;\n    if (timeOn) {\n      interval = setInterval(() => {\n        setTime((preVal) => preVal + 10);\n      }, 10);\n    } else {\n      return clearInterval(interval);\n    }\n\n    return () => clearInterval(interval);\n  }, [timeOn]);\n\n  return (\n    <div className=\"App-header\">\n      <div>\n        <span>{(\"0\" + Math.floor((time / 60000) % 60)).slice(-2)}:</span>\n        <span>{(\"0\" + Math.floor((time / 1000) % 60)).slice(-2)}:</span>\n        <span>{(\"0\" + Math.floor((time / 10) % 100)).slice(-2)}</span>\n      </div>\n      {!timeOn && time === 0 && (\n        <button onClick={() => setTimeOn(true)}>Start</button>\n      )}\n      {timeOn && <button onClick={() => setTimeOn(false)}>Stop</button>}\n      {!timeOn && time !== 0 && (\n        <button onClick={() => setTimeOn(true)}>Resume</button>\n      )}\n      {!timeOn && time !== 0 && (\n        <button onClick={() => setTime(0)}>Reset</button>\n      )}\n    </div>\n  );\n}\n\nexport default StopWatch;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport StopWatch from './StopWatch'\n\nReactDOM.render(<StopWatch/>, document.getElementById(\"root\"));\n"],"sourceRoot":""}